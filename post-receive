#!/bin/bash


# POST-RECEIVE HOOK
# ARGV: empty
# STDIN: [OLD HEAD] [NEW HEAD] refs/heads/alpha
set -- $(cat /dev/stdin)

old=$1 && new=$2 && ref=$3
branch=$(basename $ref)

# POST-UPDATE HOOK
# ARGV: $1 is branch
# STDIN: ?
#branch=$(basename $1)

cd ..
root=`pwd`

# GIT_DIR is "." which should points to bare repozitory
GIT_DIR="`pwd`/$branch/.git"

# colors
red()   { echo -e "\e[1;31m$*\e[0m"; }
green() { echo -e "\e[1;32m$*\e[0m"; }
blue()  { echo -e "\e[1;34m$*\e[0m"; }

blue "Reading /etc/profile ..."
source /etc/profile

blue "Environment setup:"
echo "\$PATH: $PATH"

if [ -d "$branch" ] ; then
  cd $branch
  blue "Updating $branch in `pwd` ... (from $old' to '$new')"
  git reset --hard
  # TODO: rebase will be better
  git pull
else
  blue "Cloning $branch to $(pwd)/$branch (HEAD: '$new') ..."
  git clone repo.git $branch
  cd $branch
  git checkout $branch
  blue "Creating logs ..."
  # tmp for tmp/restart.txt
  mkdir log tmp 2> /dev/null
  # global hooks
  # /webs/static/hooks/update
  if [ -x "$root/../hooks/clone" ] ; then
    blue "Runnings global clone hook"
    $root/../hooks/clone
  fi
fi

# vhosts
vhost="$root/vhosts/$branch.vhost"
if ! [ -f "$vhost" ] ; then
  green "Creating vhost file in $vhost ..."
  mkdir $(dirname $vhost) 2> /dev/null
  vhost-gen.rb $root $branch > $vhost
  green "Restarting Apache ..."
  httpd -k restart
fi

# HOOKS
# Run first found hook

# hooks: run local, if doesn't exist, run global
if [ -x "hooks/update" ] ; then
  blue "Runnings project's update hook"
  hooks/update
elif [ -x "../../hooks/update" ] ; then
  blue "Runnings global update hook"
  ../../hooks/update
fi

# NOTE: it may be in webs
if [ -d "tmp" ] ; then
  blue "Restarting application ..."
  touch tmp/restart.txt
fi
